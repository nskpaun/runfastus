{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Tabs.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/seo.tsx"],"names":["NotFoundPage","render","data","this","props","siteTitle","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","location","banner","_components_seo__WEBPACK_IMPORTED_MODULE_3__","keywords","React","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","createElement","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","RF_TABS","name","path","Tabs","react","style","display","map","marginBottom","marginTop","marginRight","gatsby_browser_entry","textDecoration","color","to","Layout","header","_this$props","alignItems","gatsby_image_default","fixed","childImageSharp","marginLeft","position","maxWidth","padding","hideTabs","components_Tabs","Date","getFullYear","href","SEO","_this","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_444467372_json__WEBPACK_IMPORTED_MODULE_1__","getDefaultProps"],"mappings":"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","file":"component---src-pages-404-tsx-d6a9c04ffc63cb3284b2.js","sourcesContent":["import * as React from 'react';\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nimport { RFSiteLocation, RFPost, RFBannerImage } from '../types/RFTypes'\nimport { RFSiteData, RFSiteDataGraphQL } from '../types/GraphQLFragments'\n\ninterface NotFoundPageProps {\n  location: RFSiteLocation;\n  data: {\n    site: RFSiteData\n    banner: RFBannerImage\n  }\n}\n\nclass NotFoundPage extends React.Component<NotFoundPageProps> {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={siteTitle}\n        banner={data.banner}>\n        <SEO\n          title=\"404: Not Found\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`, `runfastus`]} />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 1000, height: 250) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      ...RFSiteDataGraphQL\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\nimport { RFSiteLocation } from '../types/RFTypes'\n\ninterface RFTab {\n  name: string;\n  path: string;\n}\n\ninterface RFTabsProps {\n  location: RFSiteLocation;\n}\n\nconst RF_TABS: Array<RFTab> = [\n  {\n    name: \"Blog\",\n    path: \"/\",\n  },\n  {\n    name: \"Lore\",\n    path: \"/lore\",\n  },\n  {\n    name: \"Swag\",\n    path: \"/swag\",\n  },\n];\n\nclass Tabs extends React.Component<RFTabsProps> {\n  render() {\n    const location = this.props.location.pathname;\n    return (\n      <div\n        style={{\n          display: `flex`,\n        }}\n      > {RF_TABS.map(({ name, path }) =>\n        <h3\n          style={{\n            ...scale(0.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n            marginRight: 10,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={path}\n          >\n            {name}\n          </Link>\n        </h3>\n      )}\n      </div>\n    );\n  }\n}\nexport default Tabs\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image'\nimport Tabs from '../components/Tabs';\nimport { RFSiteLocation, RFBannerImage } from '../types/RFTypes'\n\nimport { rhythm, scale } from '../utils/typography';\n\ninterface RFLayoutProps {\n  location: RFSiteLocation;\n  title: string;\n  hideTabs?: boolean;\n  banner: RFBannerImage;\n}\n\nclass Layout extends React.Component<RFLayoutProps> {\n  render() {\n    const { location, title, children } = this.props;\n    // @ts-ignore: it's a string but I don't know how to tell typescript...\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header: JSX.Element | React.ReactElement<any>;\n      header = (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: 'flex-end',\n          }}\n          >\n          <Image\n            fixed={this.props.banner.childImageSharp.fixed}\n            style={{\n              marginBottom: 0,\n            }}\n          />\n          <h1\n            style={{\n              ...scale(1.4),\n              marginBottom: rhythm(1.5),\n              marginLeft: rhythm(1.5),\n              marginTop: 0,\n              position: 'absolute',\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: `none`,\n                textDecoration: `none`,\n                color: `white`,\n              }}\n              to={`/`}\n            >\n              {title}\n            </Link>\n          </h1>\n        </div>\n      )\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(35),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {this.props.hideTabs ? null : <Tabs location={location} />}\n        {children}\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import * as React from 'react';\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { RFSiteData, RFSiteDataGraphQL } from '../types/GraphQLFragments'\n\ninterface SeoProps {\n  description?: string;\n  lang?: string;\n  meta?: Array<any>;\n  keywords: Array<string>;\n  title: string;\n}\n\ninterface SeoQueryProps {\n  site: {\n    siteMetadata: {\n      title: string;\n      description: string; author: string\n    }\n  }\n}\n\n\nclass SEO extends React.Component<SeoProps> {\n  render() {\n    const { description, lang, meta, keywords, title } = this.props;\n    return (\n      <StaticQuery\n        query={detailsQuery}\n        render={(data: SeoQueryProps) => {\n          const metaDescription =\n            description || data.site.siteMetadata.description\n          return (\n            <Helmet\n              htmlAttributes={{\n                lang,\n              }}\n              title={title}\n              titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n              meta={[\n                {\n                  name: `description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:title`,\n                  content: title,\n                },\n                {\n                  property: `og:description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:type`,\n                  content: `website`,\n                },\n                {\n                  name: `twitter:card`,\n                  content: `summary`,\n                },\n                {\n                  name: `twitter:creator`,\n                  content: data.site.siteMetadata.author,\n                },\n                {\n                  name: `twitter:title`,\n                  content: title,\n                },\n                {\n                  name: `twitter:description`,\n                  content: metaDescription,\n                },\n              ]\n                .concat(\n                  this.props.keywords && this.props.keywords.length > 0\n                    ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                    : []\n                )\n                .concat(meta)}\n            >\n              <html lang=\"en\" />\n              <title>{data.site.siteMetadata.title}</title>\n              <meta\n                name=\"google-site-verification\"\n                content=\"r9TUaNJMX2Uj7QpSR809jgCQGjIGK0PNouGD_fo0u7U\"\n              />\n            </Helmet>\n          )\n        }}\n      />\n    );\n  }\n\n  getDefaultProps() {\n    return {\n      lang: `en`,\n      meta: [],\n      keywords: [],\n    };\n  }\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      ...RFSiteDataGraphQL\n    }\n  }\n`\n"],"sourceRoot":""}