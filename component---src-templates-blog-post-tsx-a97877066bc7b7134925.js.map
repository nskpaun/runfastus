{"version":3,"sources":["webpack:///./src/components/RFGuestAuthorHeader.tsx","webpack:///./src/components/RFShare.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Tabs.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/Bio.js"],"names":["RFGuestAuthorHeader","render","authorAttribution","this","props","guestAuthorName","react","style","display","marginBottom","flexDirection","justifyContent","alignItems","backgroundColor","fontStyle","borderRadius","padding","height","POG_RADIUS","width","color","fontSize","marginRight","substring","React","RFShare","_this$props","socialConfig","tags","flexGrow","FacebookShareButton","url","config","className","fa","TwitterShareButton","title","via","twitterHandle","split","join","hashtags","LinkedinShareButton","RedditShareButton","BlogPostTemplate","post","data","markdownRemark","siteData","site","siteMetadata","siteTitle","_this$props$pageConte","pageContext","previous","next","authorHeader","frontmatter","guest_author","components_RFGuestAuthorHeader","Layout","location","banner","seo","description","excerpt","keywords","Object","assign","scale","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","Bio","components_RFShare","social","twitter","pathname","flexWrap","listStyle","gatsby_browser_entry","to","fields","slug","rel","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","createElement","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","RF_TABS","name","path","Tabs","map","textDecoration","header","gatsby_image_default","fixed","childImageSharp","marginLeft","position","maxWidth","hideTabs","components_Tabs","Date","getFullYear","href","SEO","_this","lang","meta","react__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","_public_static_d_444467372_json__WEBPACK_IMPORTED_MODULE_1__","getDefaultProps","bioQuery","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_data$site$siteMetada","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","avatar","alt","minWidth","imgStyle","_public_static_d_2949667701_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-tsx-a97877066bc7b7134925.js","sourcesContent":["import * as React from 'react';\n\ninterface RFGuestAuthorHeaderProps {\n  guestAuthorName: string;\n}\n\nconst POG_RADIUS = 24;\n\nclass RFGuestAuthorHeader extends React.Component<RFGuestAuthorHeaderProps> {\n  render() {\n    const authorAttribution =\n      `Written by The Most Honorable ${this.props.guestAuthorName}, friend of Runfastus who lives.`;\n    return (\n      <div\n        style={{\n          display: `flex`,\n          marginBottom: 24,\n        }}\n      >\n        <div\n          style={{\n            display: `flex`,\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: '#F5F5F5',\n            fontStyle: 'italic',\n            borderRadius: 5,\n            padding: 12,\n          }}>\n          <div\n            style={{\n              display: `flex`,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: '#0073e6',\n              fontStyle: 'italic',\n              borderRadius: POG_RADIUS,\n              height:POG_RADIUS * 2,\n              width: POG_RADIUS * 2,\n              color: '#ffffff',\n              fontSize: 24,\n              marginRight: 12,\n              padding: 12,\n            }}>\n            {this.props.guestAuthorName.substring(0,1)}\n          </div>\n          {authorAttribution}\n        </div>\n      </div>\n    );\n  }\n}\nexport default RFGuestAuthorHeader\n","import * as React from 'react';\nimport { navigate } from 'gatsby'\nimport * as ReactGA from 'react-ga';\nimport { FaFacebook, FaLinkedin, FaTwitter, FaReddit } from 'react-icons/fa';\nimport {\n  FacebookShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  RedditShareButton,\n} from 'react-share';\n\ninterface RFShareProps {\n  socialConfig: {\n    twitterHandle: string\n    config: {\n      url: string\n      title: string\n    }\n  }\n  tags: Array<string>\n}\n\nclass RFShare extends React.Component<RFShareProps> {\n  render() {\n    const { socialConfig, tags } = this.props;\n    return (\n      <div style={{\n        display:'flex',\n        flexGrow:1,\n        justifyContent: 'space-between',\n        color: '#0073e6',\n        marginBottom: 12,\n      }}>\n        <FacebookShareButton url={socialConfig.config.url} className=\"button is-outlined is-rounded facebook\" >\n          <span className=\"icon\">\n            <FaFacebook />\n          </span>\n          <span className=\"text\">Facebook</span>\n        </FacebookShareButton>\n        <TwitterShareButton url={socialConfig.config.url} className=\"button is-outlined is-rounded twitter\" title={socialConfig.config.title} via={socialConfig.twitterHandle.split('@').join('')} hashtags={tags} >\n          <span className=\"icon\">\n            <FaTwitter />\n          </span>\n          <span className=\"text\">Twitter</span>\n        </TwitterShareButton>\n        <LinkedinShareButton url={socialConfig.config.url} className=\"button is-outlined is-rounded linkedin\" title={socialConfig.config.title} >\n          <span className=\"icon\">\n            <FaLinkedin />\n          </span>\n          <span className=\"text\">LinkedIn</span>\n        </LinkedinShareButton>\n        <RedditShareButton url={socialConfig.config.url} className=\"button is-outlined is-rounded reddit\" title={socialConfig.config.title} >\n          <span className=\"icon\">\n            <FaReddit />\n          </span>\n          <span className=\"text\">Reddit</span>\n        </RedditShareButton>\n      </div>\n    );\n  }\n}\n\nexport default RFShare\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport RFGuestAuthorHeader from '../components/RFGuestAuthorHeader'\nimport RFShare from '../components/RFShare'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nimport { RFSiteLocation, RFPostFields, RFBannerImage } from '../types/RFTypes'\nimport { RFSiteData, RFSiteDataGraphQL } from '../types/GraphQLFragments'\n\ntype RFPostPageData = RFPostFields & { html: string }\n\ninterface BlogPostTemplateProps {\n  pageContext: {\n    previous?: RFPostPageData;\n    next?: RFPostPageData;\n  };\n  location: RFSiteLocation;\n  data: {\n    site: RFSiteData;\n    markdownRemark: RFPostPageData;\n    banner: RFBannerImage;\n  }\n}\n\nclass BlogPostTemplate extends React.Component<BlogPostTemplateProps> {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteData = this.props.data.site.siteMetadata\n    const siteTitle = siteData.title\n    const { previous, next } = this.props.pageContext\n\n    const guestAuthor = post.frontmatter.guest_author;\n    let authorHeader = null;\n    if (guestAuthor) {\n      authorHeader = <RFGuestAuthorHeader guestAuthorName={post.frontmatter.guest_author} />\n    }\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={siteTitle}\n        banner={this.props.data.banner}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.excerpt}\n          keywords={post.frontmatter.tags} />\n        <h1>{post.frontmatter.title}</h1>\n        {authorHeader}\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n        <RFShare\n          socialConfig={{\n            twitterHandle: siteData.social.twitter,\n            config: {\n              url: \"runfastus.com/\" + this.props.location.pathname,\n              title: post.frontmatter.title,\n            },\n          }}\n          tags={[]}\n        />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 1000, height: 250) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      ...RFSiteDataGraphQL\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        guest_author\n        tags\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\nimport { RFSiteLocation } from '../types/RFTypes'\n\ninterface RFTab {\n  name: string;\n  path: string;\n}\n\ninterface RFTabsProps {\n  location: RFSiteLocation;\n}\n\nconst RF_TABS: Array<RFTab> = [\n  {\n    name: \"Blog\",\n    path: \"/\",\n  },\n  {\n    name: \"Lore\",\n    path: \"/lore\",\n  },\n  {\n    name: \"Swag\",\n    path: \"/swag\",\n  },\n];\n\nclass Tabs extends React.Component<RFTabsProps> {\n  render() {\n    const location = this.props.location.pathname;\n    return (\n      <div\n        style={{\n          display: `flex`,\n        }}\n      > {RF_TABS.map(({ name, path }) =>\n        <h3\n          style={{\n            ...scale(0.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n            marginRight: 10,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={path}\n          >\n            {name}\n          </Link>\n        </h3>\n      )}\n      </div>\n    );\n  }\n}\nexport default Tabs\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image'\nimport Tabs from '../components/Tabs';\nimport { RFSiteLocation, RFBannerImage } from '../types/RFTypes'\n\nimport { rhythm, scale } from '../utils/typography';\n\ninterface RFLayoutProps {\n  location: RFSiteLocation;\n  title: string;\n  hideTabs?: boolean;\n  banner: RFBannerImage;\n}\n\nclass Layout extends React.Component<RFLayoutProps> {\n  render() {\n    const { location, title, children } = this.props;\n    // @ts-ignore: it's a string but I don't know how to tell typescript...\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header: JSX.Element | React.ReactElement<any>;\n      header = (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: 'flex-end',\n          }}\n          >\n          <Image\n            fixed={this.props.banner.childImageSharp.fixed}\n            style={{\n              marginBottom: 0,\n            }}\n          />\n          <h1\n            style={{\n              ...scale(1.4),\n              marginBottom: rhythm(1.5),\n              marginLeft: rhythm(1.5),\n              marginTop: 0,\n              position: 'absolute',\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: `none`,\n                textDecoration: `none`,\n                color: `white`,\n              }}\n              to={`/`}\n            >\n              {title}\n            </Link>\n          </h1>\n        </div>\n      )\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(35),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {this.props.hideTabs ? null : <Tabs location={location} />}\n        {children}\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import * as React from 'react';\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { RFSiteData, RFSiteDataGraphQL } from '../types/GraphQLFragments'\n\ninterface SeoProps {\n  description?: string;\n  lang?: string;\n  meta?: Array<any>;\n  keywords: Array<string>;\n  title: string;\n}\n\ninterface SeoQueryProps {\n  site: {\n    siteMetadata: {\n      title: string;\n      description: string; author: string\n    }\n  }\n}\n\n\nclass SEO extends React.Component<SeoProps> {\n  render() {\n    const { description, lang, meta, keywords, title } = this.props;\n    return (\n      <StaticQuery\n        query={detailsQuery}\n        render={(data: SeoQueryProps) => {\n          const metaDescription =\n            description || data.site.siteMetadata.description\n          return (\n            <Helmet\n              htmlAttributes={{\n                lang,\n              }}\n              title={title}\n              titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n              meta={[\n                {\n                  name: `description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:title`,\n                  content: title,\n                },\n                {\n                  property: `og:description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:type`,\n                  content: `website`,\n                },\n                {\n                  name: `twitter:card`,\n                  content: `summary`,\n                },\n                {\n                  name: `twitter:creator`,\n                  content: data.site.siteMetadata.author,\n                },\n                {\n                  name: `twitter:title`,\n                  content: title,\n                },\n                {\n                  name: `twitter:description`,\n                  content: metaDescription,\n                },\n              ]\n                .concat(\n                  this.props.keywords && this.props.keywords.length > 0\n                    ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                    : []\n                )\n                .concat(meta)}\n            >\n              <html lang=\"en\" />\n              <title>{data.site.siteMetadata.title}</title>\n              <meta\n                name=\"google-site-verification\"\n                content=\"r9TUaNJMX2Uj7QpSR809jgCQGjIGK0PNouGD_fo0u7U\"\n              />\n            </Helmet>\n          )\n        }}\n      />\n    );\n  }\n\n  getDefaultProps() {\n    return {\n      lang: `en`,\n      meta: [],\n      keywords: [],\n    };\n  }\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      ...RFSiteDataGraphQL\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            {<Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />}\n            <p>\n              Blog by <strong>{author}</strong> who lives.\n              {` `}<br></br>\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/logo.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}