{"version":3,"sources":["webpack:///./src/components/RFWelcomeMat.tsx","webpack:///./src/components/RFSubscriptionForm.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Tabs.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/Bio.js"],"names":["ReactGA","RFWelcomeMat","render","posts","this","props","react","style","display","flexDirection","marginBottom","justifyContent","backgroundColor","borderRadius","padding","color","marginTop","onClick","target","Math","floor","random","length","category","action","label","navigate","node","fields","slug","React","initialState","email","hasSucceeded","RFSubscriptionForm","state","confirmationComponent","_this2","borderWidth","borderColor","flexGrow","marginRight","height","placeholder","value","onChange","event","setState","addToMailchimp","then","data","result","console","log","catch","BlogIndex","siteTitle","site","siteMetadata","title","allMarkdownRemark","edges","thumbnails","allFile","postsWithThumbnails","map","_ref","cleanSlug","replace","thumbnail","filter","absolutePath","indexOf","Layout","location","hideTabs","seo","keywords","components_RFWelcomeMat","components_RFSubscriptionForm","Tabs","Bio","_ref2","frontmatter","thumbnailComponent","className","gatsby_image_default","a","fixed","childImageSharp","fluid","width","key","alignItems","rhythm","gatsby_browser_entry","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","createElement","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","RF_TABS","name","path","pathname","react__WEBPACK_IMPORTED_MODULE_3__","Object","assign","gatsby__WEBPACK_IMPORTED_MODULE_4__","textDecoration","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","fontFamily","marginLeft","maxWidth","_components_Tabs__WEBPACK_IMPORTED_MODULE_4__","Date","getFullYear","href","SEO","_this","description","lang","meta","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","join","_public_static_d_444467372_json__WEBPACK_IMPORTED_MODULE_1__","getDefaultProps","bioQuery","react__WEBPACK_IMPORTED_MODULE_2___default","_data$site$siteMetada","social","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","avatar","alt","minWidth","imgStyle","twitter","_public_static_d_2949667701_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-tsx-f19b4f5b8f6ea246d33d.js","sourcesContent":["import * as React from 'react';\nimport { navigate } from 'gatsby'\nimport * as ReactGA from 'react-ga';\n\nimport { RFPost } from '../types/RFTypes';\n\nReactGA.initialize('UA-132813912-1');\n\ninterface RFWelcomeMatProps {\n  posts: Array<RFPost>;\n}\n\nconst WELCOME_TEXT = 'Welcome to The Order of Runfastus. We are an ancient order of amateur runners who hold speed as the highest virtue. Within the links of this blog you will find the truth and transcend the modern prison of running culture.';\n\nconst LINK_TEXT: string = 'Explore the Order';\n\nclass RFWelcomeMat extends React.Component<RFWelcomeMatProps> {\n  render() {\n    const posts = this.props.posts;\n    return (\n      <div\n        style={{\n          display: `flex`,\n          flexDirection: 'column',\n          marginBottom: 24,\n        }}\n      >\n        <div\n          style={{\n            display: `flex`,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            backgroundColor: '#F5F5F5',\n            borderRadius: 5,\n            padding: 12,\n          }}>\n          {WELCOME_TEXT}\n        </div>\n        <div\n          style={{\n            display: `flex`,\n            backgroundColor: '#CD5C5C',\n            justifyContent: 'center',\n            color: '#FFFFFF',\n            borderRadius: 10,\n            padding: 14,\n            marginTop: 12,\n          }}\n          onClick={() => {\n            const target = posts[Math.floor(Math.random() * posts.length)];\n            ReactGA.event({\n              category: 'Navigation',\n              action: 'ExploreButton',\n              label: LINK_TEXT,\n            })\n            navigate(target.node.fields.slug);\n          }}>\n          {LINK_TEXT}\n        </div>\n      </div>\n    );\n  }\n}\nexport default RFWelcomeMat\n","import addToMailchimp from 'gatsby-plugin-mailchimp';\nimport * as React from 'react';\nimport * as ReactGA from 'react-ga';\n\nReactGA.initialize('UA-132813912-1');\n\nconst initialState = { email: '', hasSucceeded: null };\n\ntype State = Readonly<{ email: string, hasSucceeded?: boolean }>;\n\n\ninterface MailChimpResult { msg: string; result: string; };\n\nconst CTA_TEXT = 'Sign up to stay up to date with the latest Runfastus content';\n\nconst SUBSCRIBE_TEXT = 'Subscribe';\n\nclass RFSubscriptionForm extends React.Component<{}, State> {\n\n  readonly state: State = initialState\n\n  render() {\n\n    let confirmationComponent;\n    if (this.state.hasSucceeded) {\n      confirmationComponent = <div\n        style={{\n          display: `flex`,\n          flexDirection: 'column',\n          justifyContent: 'center',\n          backgroundColor: '#A2ED90',\n          color: '#FFFFFF',\n          borderRadius: 5,\n          padding: 12,\n        }}>\n        {'You are now subscribed!'}\n      </div>\n    } else if (this.state.hasSucceeded === null) {\n      confirmationComponent = null;\n    } else {\n      confirmationComponent = <div\n        style={{\n          display: `flex`,\n          flexDirection: 'column',\n          justifyContent: 'center',\n          backgroundColor: '#000000',\n          color: '#FFFFFF',\n          borderRadius: 5,\n          padding: 12,\n        }}>\n        {'Oops something went wrong :('}\n      </div>\n    }\n\n    return (\n      <div\n        style={{\n          display: `flex`,\n          flexDirection: 'column',\n          marginBottom: 24,\n        }}\n      >\n        <div\n          style={{\n            display: `flex`,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            backgroundColor: '#F5F5F5',\n            borderRadius: 5,\n            padding: 12,\n          }}>\n          {CTA_TEXT}\n        </div>\n        <div\n          style={{\n            display: `flex`,\n            flexDirection: 'row',\n          }}>\n          <textarea\n            style={{\n              display: `flex`,\n              backgroundColor: '#FFFFFF',\n              justifyContent: 'center',\n              color: '#000000',\n              borderWidth: 2, borderColor: '#d6d7da',\n              flexGrow: 1,\n              borderRadius: 10,\n              padding: 12,\n              marginTop: 12,\n              marginRight: 12,\n              height: 60,\n            }}\n            placeholder={'Your email address'}\n            value={this.state.email}\n            onChange={(event) => {\n              this.setState({ email: event.target.value });\n            }} >\n            Email\n        </textarea>\n          <div\n            style={{\n              display: `flex`,\n              backgroundColor: '#CD5C5C',\n              justifyContent: 'center',\n              color: '#FFFFFF',\n              borderRadius: 10,\n              padding: 14,\n              marginTop: 12,\n              height: 60,\n            }}\n            onClick={() => {\n              ReactGA.event({\n                category: 'Subscription',\n                action: 'SubscribeButtonPressed',\n              });\n              addToMailchimp(this.state.email)\n                .then((data: MailChimpResult) => {\n                  if (data.result === \"success\") {\n                    ReactGA.event({\n                      category: 'Subscription',\n                      action: 'SubscribeSucceeded',\n                    });\n                    this.setState({ hasSucceeded: true });\n                  } else {\n                    this.setState({ hasSucceeded: false });\n                  }\n                  console.log(data)\n                })\n                .catch(() => {\n                  // unnecessary because Mailchimp only ever\n                  // returns a 200 status code\n                  // see below for how to handle errors\n                });\n            }}>\n            {SUBSCRIBE_TEXT}\n          </div>\n        </div>\n        {confirmationComponent}\n      </div >\n    );\n  }\n}\nexport default RFSubscriptionForm\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport Tabs from '../components/Tabs'\nimport SEO from '../components/seo'\nimport RFWelcomeMat from '../components/RFWelcomeMat'\nimport RFSubscriptionForm from '../components/RFSubscriptionForm'\nimport { rhythm } from '../utils/typography'\nimport { RFSiteLocation, RFPost } from '../types/RFTypes'\nimport { RFSiteData, RFSiteDataGraphQL } from '../types/GraphQLFragments'\nimport { RFThumbnailImageGraphQL, RFThumbnailImage } from '../types/GraphQLFragments'\nimport Image from 'gatsby-image';\n\ninterface RFThumbnailNode {\n  node: RFThumbnailImage & { absolutePath: string }\n}\n\ninterface IndexPageProps {\n  location: RFSiteLocation;\n  data: {\n    allFile: {\n      edges: Array<RFThumbnailNode>\n    }\n    site: RFSiteData\n    allMarkdownRemark: {\n      edges: Array<RFPost>\n    }\n  }\n}\n\nclass BlogIndex extends React.Component<IndexPageProps> {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n    const thumbnails = data.allFile.edges;\n\n    const postsWithThumbnails = posts.map(({ node }) => {\n      const cleanSlug = node.fields.slug.replace(\"/\", \"\");\n      const thumbnail = thumbnails.filter(thumbnail => {\n        return thumbnail.node.absolutePath.indexOf(cleanSlug) > -1;\n      })[0];\n      return { node: node, thumbnail: thumbnail };\n    });\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} hideTabs={true}>\n        <SEO\n          title=\"Runfastus\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`, `runfastus`]}\n        />\n        <RFWelcomeMat posts={posts} />\n        <RFSubscriptionForm />\n        <Tabs location={this.props.location} />\n        <Bio />\n        {postsWithThumbnails.map(({ node, thumbnail }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          const thumbnailComponent = thumbnail ?\n            <div className=\"BlogListItemImage\">\n              <Image\n                fixed={thumbnail.node.childImageSharp.fluid}\n                style={{\n                  width: 150,\n                  height: 150,\n                  marginRight: 12,\n                }}\n              />\n            </div> : null;\n          return (\n            <div\n              key={node.fields.slug}\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\"\n              }}>\n              {thumbnailComponent}\n              <div style={{ flexDirection: \"column\" }}>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n              </div>\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      ...RFSiteDataGraphQL\n    }\n    allFile(\n      filter: {\n        absolutePath: {regex: \"/.*blog.*/\"},\n        extension: {regex: \"/png|jpg/\"\n      }\n    }) {\n      edges {\n        node {\n          absolutePath\n          ...RFThumbnailImageGraphQL\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {fileAbsolutePath: {regex: \"/.*blog.*/\"}}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            guest_author\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\nimport { RFSiteLocation } from '../types/RFTypes'\n\ninterface RFTab {\n  name: string;\n  path: string;\n}\n\ninterface RFTabsProps {\n  location: RFSiteLocation;\n}\n\nconst RF_TABS: Array<RFTab> = [\n  {\n    name: \"Blog\",\n    path: \"/\",\n  },\n  {\n    name: \"Lore\",\n    path: \"/lore\",\n  },\n  {\n    name: \"Swag\",\n    path: \"/swag\",\n  },\n];\n\nclass Tabs extends React.Component<RFTabsProps> {\n  render() {\n    const location = this.props.location.pathname;\n    return (\n      <div\n        style={{\n          display: `flex`,\n        }}\n      > {RF_TABS.map(({ name, path }) =>\n        <h3\n          style={{\n            ...scale(0.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n            marginRight: 10,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={path}\n          >\n            {name}\n          </Link>\n        </h3>\n      )}\n      </div>\n    );\n  }\n}\nexport default Tabs\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport Tabs from '../components/Tabs';\nimport { RFSiteLocation } from '../types/RFTypes'\n\nimport { rhythm, scale } from '../utils/typography';\n\ninterface RFLayoutProps {\n  location: RFSiteLocation;\n  title: string;\n  hideTabs?: boolean\n}\n\nclass Layout extends React.Component<RFLayoutProps> {\n  render() {\n    const { location, title, children } = this.props;\n    // @ts-ignore: it's a string but I don't know how to tell typescript...\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header: JSX.Element | React.ReactElement<any>;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.4),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {this.props.hideTabs ? null : <Tabs location={location} />}\n        {children}\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import * as React from 'react';\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { RFSiteData, RFSiteDataGraphQL } from '../types/GraphQLFragments'\n\ninterface SeoProps {\n  description?: string;\n  lang?: string;\n  meta?: Array<any>;\n  keywords: Array<string>;\n  title: string;\n}\n\ninterface SeoQueryProps {\n  site: {\n    siteMetadata: {\n      title: string;\n      description: string; author: string\n    }\n  }\n}\n\n\nclass SEO extends React.Component<SeoProps> {\n  render() {\n    const { description, lang, meta, keywords, title } = this.props;\n    return (\n      <StaticQuery\n        query={detailsQuery}\n        render={(data: SeoQueryProps) => {\n          const metaDescription =\n            description || data.site.siteMetadata.description\n          return (\n            <Helmet\n              htmlAttributes={{\n                lang,\n              }}\n              title={title}\n              titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n              meta={[\n                {\n                  name: `description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:title`,\n                  content: title,\n                },\n                {\n                  property: `og:description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:type`,\n                  content: `website`,\n                },\n                {\n                  name: `twitter:card`,\n                  content: `summary`,\n                },\n                {\n                  name: `twitter:creator`,\n                  content: data.site.siteMetadata.author,\n                },\n                {\n                  name: `twitter:title`,\n                  content: title,\n                },\n                {\n                  name: `twitter:description`,\n                  content: metaDescription,\n                },\n              ]\n                .concat(\n                  this.props.keywords && this.props.keywords.length > 0\n                    ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                    : []\n                )\n                .concat(meta)}\n            >\n              <html lang=\"en\" />\n              <title>{data.site.siteMetadata.title}</title>\n              <meta\n                name=\"google-site-verification\"\n                content=\"r9TUaNJMX2Uj7QpSR809jgCQGjIGK0PNouGD_fo0u7U\"\n              />\n            </Helmet>\n          )\n        }}\n      />\n    );\n  }\n\n  getDefaultProps() {\n    return {\n      lang: `en`,\n      meta: [],\n      keywords: [],\n    };\n  }\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      ...RFSiteDataGraphQL\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            {<Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />}\n            <p>\n              Blog by <strong>{author}</strong> who lives.\n              {` `}<br></br>\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/logo.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}