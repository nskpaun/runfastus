{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Tabs.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.tsx","webpack:///./src/components/seo.tsx"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","RF_TABS","name","path","Tabs","pathname","react__WEBPACK_IMPORTED_MODULE_3__","style","display","map","_ref","Object","assign","marginBottom","marginTop","marginRight","gatsby__WEBPACK_IMPORTED_MODULE_4__","textDecoration","color","to","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","fontFamily","marginLeft","maxWidth","padding","hideTabs","_components_Tabs__WEBPACK_IMPORTED_MODULE_4__","Date","getFullYear","href","SEO","_this","description","lang","meta","keywords","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","getDefaultProps"],"mappings":"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","file":"component---src-pages-404-js-2a8377c1385e424b8938.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\nimport { RFSiteLocation } from '../types/RFTypes'\n\ninterface RFTab {\n  name: string;\n  path: string;\n}\n\ninterface RFTabsProps {\n  location: RFSiteLocation;\n}\n\nconst RF_TABS: Array<RFTab> = [\n  {\n    name: \"Blog\",\n    path: \"/\",\n  },\n  {\n    name: \"Lore\",\n    path: \"/lore\",\n  },\n  {\n    name: \"Swag\",\n    path: \"/swag\",\n  },\n];\n\nclass Tabs extends React.Component<RFTabsProps> {\n  render() {\n    const location = this.props.location.pathname;\n    return (\n      <div\n        style={{\n          display: `flex`,\n        }}\n      > {RF_TABS.map(({ name, path }) =>\n        <h3\n          style={{\n            ...scale(0.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n            marginRight: 10,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={path}\n          >\n            {name}\n          </Link>\n        </h3>\n      )}\n      </div>\n    );\n  }\n}\nexport default Tabs\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport Tabs from '../components/Tabs';\nimport { RFSiteLocation } from '../types/RFTypes'\n\nimport { rhythm, scale } from '../utils/typography';\n\ninterface RFLayoutProps {\n  location: RFSiteLocation;\n  title: string;\n  hideTabs?: boolean\n}\n\nclass Layout extends React.Component<RFLayoutProps> {\n  render() {\n    const { location, title, children } = this.props;\n    // @ts-ignore: it's a string but I don't know how to tell typescript...\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header: JSX.Element | React.ReactElement<any>;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {this.props.hideTabs ? null : <Tabs location={location} />}\n        {children}\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import * as React from 'react';\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { RFSiteData } from '../types/RFTypes'\n\ninterface SeoProps {\n  description?: string;\n  lang?: string;\n  meta?: Array<any>;\n  keywords: Array<string>;\n  title: string;\n}\n\ninterface SeoQueryProps {\n  site: {\n    siteMetadata: {\n      title: string;\n      description: string; author: string\n    }\n  }\n}\n\n\nclass SEO extends React.Component<SeoProps> {\n  render() {\n    const { description, lang, meta, keywords, title } = this.props;\n    return (\n      <StaticQuery\n        query={detailsQuery}\n        render={(data: SeoQueryProps) => {\n          const metaDescription =\n            description || data.site.siteMetadata.description\n          return (\n            <Helmet\n              htmlAttributes={{\n                lang,\n              }}\n              title={title}\n              titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n              meta={[\n                {\n                  name: `description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:title`,\n                  content: title,\n                },\n                {\n                  property: `og:description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:type`,\n                  content: `website`,\n                },\n                {\n                  name: `twitter:card`,\n                  content: `summary`,\n                },\n                {\n                  name: `twitter:creator`,\n                  content: data.site.siteMetadata.author,\n                },\n                {\n                  name: `twitter:title`,\n                  content: title,\n                },\n                {\n                  name: `twitter:description`,\n                  content: metaDescription,\n                },\n              ]\n                .concat(\n                  this.props.keywords && this.props.keywords.length > 0\n                    ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                    : []\n                )\n                .concat(meta)}\n            >\n              <html lang=\"en\" />\n              <title>{data.site.siteMetadata.title}</title>\n              <meta\n                name=\"google-site-verification\"\n                content=\"r9TUaNJMX2Uj7QpSR809jgCQGjIGK0PNouGD_fo0u7U\"\n              />\n            </Helmet>\n          )\n        }}\n      />\n    );\n  }\n\n  getDefaultProps() {\n    return {\n      lang: `en`,\n      meta: [],\n      keywords: [],\n    };\n  }\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}